/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.ifes.edu.poo2.cgd;

import br.ifes.edu.poo2.cdp.AbstractNavio;
import br.ifes.edu.poo2.cdp.Navio;
import br.ifes.edu.poo2.cdp.util.TipoNavio;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Jordan-Not
 */
public abstract class NavioDAO extends DAOGeneric implements DAO<Navio>{
    
    public abstract Navio create();
    
    //CRIANDO A TABELA USUARIO

    public void criarTabela() throws ClassNotFoundException, SQLException {
        this.openConnection();

        this.execute("DROP TABLE IF EXISTS NAVIO");

        String sql = "CREATE TABLE NAVIO "
                + " (ID INTEGER GENERATED BY DEFAULT AS IDENTITY "
                + " (START WITH 1, INCREMENT BY 1) NOT NULL,"
                + " QTDCARGA INTEGER NOT NULL,"
                + " QTDPASSAGEIROS INTEGER NOT NULL,"
                + " TIPO_NAVIO varchar(30) NOT NULL,"
                + " PRIMARY KEY (ID) )";

        this.execute(sql);

        this.closeConnection();
    }

    public void insert(Navio obj) throws SQLException, ClassNotFoundException {

        this.openConnection();

        String sql = "INSERT INTO NAVIO (QTDCARGA, QTDPASSAGEIROS, TIPO_NAVIO) VALUES ('" + obj.getCarga()+ "','" + obj.getPassageiro()+ "','" + obj.getTipoNavio().name() + "')";

        int id = this.executeUpdate(sql);

        obj.setId(id);

        this.closeConnection();

    }

    public void update(Navio obj) throws SQLException, ClassNotFoundException {
        
        this.openConnection();
        
        String sql = "UPDATE NAVIO SET QTDCARGA='"+obj.getCarga()+"', QTDPASSAGEIROS='"+obj.getPassageiro()+"', TIPO_NAVIO='"+obj.getTipoNavio().name()+"' WHERE ID = "+obj.getId();
        
        this.executeUpdate(sql);
        
        this.closeConnection();

    }

    public void delete(Navio obj) throws SQLException, ClassNotFoundException {
        
	this.openConnection();
        
        String sql = "DELETE FROM NAVIO WHERE ID = "+obj.getId();
        
        this.execute(sql);
        
        this.closeConnection();

    }

    public Navio findbyID(Long id) throws ClassNotFoundException, SQLException {
        //Query para buscar o usuario
        this.openConnection();

        String sql = "SELECT * FROM NAVIO WHERE ID =" + id;

        ResultSet rs = this.executeQuery(sql);

        List<Navio> navio = retriveUsuarios(rs);

        this.closeConnection();
        
        if(navio.isEmpty())
            return null;
        else
            return navio.get(0);
    }

    public List<Navio> findAll() throws SQLException, ClassNotFoundException {
        // TODO Auto-generated method stub
        this.openConnection();

        String sql = "SELECT * FROM NAVIO ";

        ResultSet rs = this.executeQuery(sql);

        List<Navio> usuarios = retriveUsuarios(rs);

        this.closeConnection();

        return usuarios;
    }

    private List<Navio> retriveUsuarios(ResultSet rs) throws SQLException {
        List<Navio> usuarios = new ArrayList<>();

        while (rs.next()) {
            Navio usuario = this.create();

            usuario.setId(rs.getInt("ID"));

            usuario.setCarga(rs.getInt("QTDCARGA"));

            usuario.setPassageiro(rs.getInt("QTDPASSAGEIROS"));
            
            usuario.setTipoNavio(TipoNavio.valueOf(rs.getString("TIPO_NAVIO")));

            usuarios.add(usuario);
        }

        return usuarios;
    }
}
